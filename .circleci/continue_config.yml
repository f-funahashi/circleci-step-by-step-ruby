version: 2.1

orbs:
  node: circleci/node@5.1.0
  ruby: circleci/ruby@2.0.0

# the default pipeline parameters, which will be updated according to
# the results of the path-filtering orb
parameters:
  run-test-views-job:
    type: boolean
    default: false
  run-test-controllers-job:
    type: boolean
    default: false

jobs:
  build:
    docker:
      - image: cimg/ruby:2.7-node
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
  views-test:
    docker:
      - image: cimg/ruby:2.7-node
        environment:
          BUNDLE_JOBS: '3'
          BUNDLE_RETRY: '3'
          PGHOST: 127.0.0.1
          PGPASSWORD: ''
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ''
          POSTGRES_USER: circleci-demo-ruby
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          name: Wait for DB
      - run:
          command: bin/rails db:schema:load --trace
          name: Database setup
      - ruby/rspec-test:
          include: spec/views/**/*_spec.rb
  controllers-test:
    docker:
      - image: cimg/ruby:2.7-node
        environment:
          BUNDLE_JOBS: '3'
          BUNDLE_RETRY: '3'
          PGHOST: 127.0.0.1
          PGPASSWORD: ''
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ''
          POSTGRES_USER: circleci-demo-ruby
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          name: Wait for DB
      - run:
          command: bin/rails db:schema:load --trace
          name: Database setup
      - ruby/rspec-test:
          include: spec/controllers/*_spec.rb


workflows:
  # when pipeline parameter, run-test-views-job is true, the
  # test-1 job is triggered.
  test-1:
    when: << pipeline.parameters.run-test-views-job >>
    jobs:
      - build
      - views-test:
          requires:
            - build
  # when pipeline parameter, run-test-controllers-job is true, the
  # test-2 job is triggered.
  test-2:
    when: << pipeline.parameters.run-test-controllers-job >>
    jobs:
      - build
      - controllers-test:
          requires:
            - build
    
  # when pipeline parameter, run-test-views-job OR
  # run-test-controllers-job is true, run-integration-tests job is
  # triggered. see:
  # https://circleci.com/docs/configuration-reference/#logic-statements
  # for more information.